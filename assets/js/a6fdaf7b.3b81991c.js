"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[568],{9818:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),c=["components"],l={},i="nc",p={unversionedId:"CloudNative/term/nc",id:"CloudNative/term/nc",title:"nc",description:"nc -- arbitrary TCP and UDP connections and listens",source:"@site/docs/CloudNative/term/nc.md",sourceDirName:"CloudNative/term",slug:"/CloudNative/term/nc",permalink:"/docs/CloudNative/term/nc",draft:!1,tags:[],version:"current",lastUpdatedAt:1683217433,formattedLastUpdatedAt:"May 4, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mycli",permalink:"/docs/CloudNative/term/mycli"},next:{title:"net-tools",permalink:"/docs/CloudNative/term/net-tools"}},s={},u=[{value:"0x01 \u5b89\u88c5",id:"0x01-\u5b89\u88c5",level:4},{value:"0x02 \u4f7f\u7528",id:"0x02-\u4f7f\u7528",level:4},{value:"0x03 example",id:"0x03-example",level:4},{value:"\u53c2\u8003\u94fe\u63a5",id:"\u53c2\u8003\u94fe\u63a5",level:4}],m={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nc"},"nc"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"nc -- arbitrary TCP and UDP connections and listens")),(0,a.kt)("h4",{id:"0x01-\u5b89\u88c5"},"0x01 \u5b89\u88c5"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"netcat-openbsd")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://packages.debian.org/sid/netcat-openbsd"},"https://packages.debian.org/sid/netcat-openbsd")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"### archlinux\n# https://archlinux.org/packages/community/x86_64/openbsd-netcat/\n### OpenSUSE\nzypper install netcat-openbsd\n")),(0,a.kt)("h4",{id:"0x02-\u4f7f\u7528"},"0x02 \u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# To open a TCP connection to port 42 of host.example.com, using port 31337 as the source port, with a timeout of 5 seconds:\nnc -p 31337 -w 5 host.example.com 42\n\n# To open a UDP connection to port 53 of host.example.com:\nnc -u host.example.com 53\n\n# To open a TCP connection to port 42 of host.example.com using 10.1.2.3 as the IP for the local end of the connection:\nnc -s 10.1.2.3 host.example.com 42\n\n# To create and listen on a UNIX-domain stream socket:\nnc -lU /var/tmp/dsocket\n\n# To connect to port 42 of host.example.com via an HTTP proxy at 10.2.3.4, port 8080. This example could also be used by ssh(1); see the ProxyCommand directive in ssh_config(5) for more information.\nnc -x10.2.3.4:8080 -Xconnect host.example.com 42\n\n# The same example again, this time enabling proxy authentication with username "ruser" if the proxy requires it:\nnc -x10.2.3.4:8080 -Xconnect -Pruser host.example.com 42\n\n# To choose the source IP for the testing using the -s option\nnc -zv -s source_IP target_IP Port\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u67e5\u770b\u7aef\u53e3\u53f7\u5f00\u542f\u60c5\u51b5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"### UDP\nnetstat -nupl\n### TCP\nnetstat -ntpl\n###\nlsof -i:80\n")),(0,a.kt)("h4",{id:"0x03-example"},"0x03 example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"### server\u5f00\u542fTCP\u7aef\u53e3\nnc -l -p 22\n### server\u5f00\u542fUDP\u7aef\u53e3\nnc -ul -p 123\n### server\u67e5\u770bTCP\u5f00\u542f\u60c5\u51b5\nnetstat -ntpl\n### server\u67e5\u770bUDP\u5f00\u542f\u60c5\u51b5\nnetstat -nupl\n### h1/h2\u68c0\u9a8cserver\u7aef\u53e3\u8fde\u901a\u6027\n### TCP\nnc -vz 10.0.0.3 22\n### UDP\nnc -u -vz 10.0.0.1 123\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"telnet 10.0.0.1 344\n### \u5f00\u542fTCP\u7aef\u53e3\nnc -l -p 344\nnc 10.0.0.1 344\n### \u5f00\u542fUDP\u7aef\u53e3\nnc -ul -p 344\n### \u68c0\u6d4b\u7aef\u53e3\u4fe1\u606f\nnc -v 10.0.0.1 344\n-z => \u626b\u63cf\u6a21\u5f0f\u3002\u4e0d\u505a\u8f93\u5165\u8f93\u51fa\u3002\n\n\u53ef\u4ee5\u4e3a\u7aef\u53e3\u53f7,\u4e5f\u53ef\u4ee5\u4e3a\u8303\u56f4,\u5982 341-348\n")),(0,a.kt)("h4",{id:"\u53c2\u8003\u94fe\u63a5"},"\u53c2\u8003\u94fe\u63a5"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://linux.cn/article-9190-1.html"},"https://linux.cn/article-9190-1.html")))}d.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var p=2;p<a;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);