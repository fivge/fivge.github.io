"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3891],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,k=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9980:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),o=["components"],p={},l=void 0,s={unversionedId:"BE/Java/spring-boot",id:"BE/Java/spring-boot",title:"spring-boot",description:"0x01 RESTful",source:"@site/docs/BE/Java/spring-boot.md",sourceDirName:"BE/Java",slug:"/BE/Java/spring-boot",permalink:"/docs/BE/Java/spring-boot",draft:!1,tags:[],version:"current",lastUpdatedAt:1690668988,formattedLastUpdatedAt:"Jul 29, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"rxjava",permalink:"/docs/BE/Java/rxjava"},next:{title:"ssm",permalink:"/docs/BE/Java/ssm"}},u={},c=[{value:"0x01 RESTful",id:"0x01-restful",level:3},{value:"<code>User.java</code>",id:"userjava",level:4},{value:"<code>UserController.java</code>",id:"usercontrollerjava",level:4},{value:"0x02 Spring Data repository",id:"0x02-spring-data-repository",level:3},{value:"<code>Ghost.java</code>",id:"ghostjava",level:4},{value:"<code>GhostRepository.java</code>",id:"ghostrepositoryjava",level:4},{value:"<code>GhostController.java</code>",id:"ghostcontrollerjava",level:4},{value:"0x00 Spring Data JPA",id:"0x00-spring-data-jpa",level:3},{value:"Repository",id:"repository",level:4},{value:"0x00 Database",id:"0x00-database",level:3},{value:"0x04 Mybatis",id:"0x04-mybatis",level:3},{value:"Mybatis Comment",id:"mybatis-comment",level:4},{value:"Mybatis XML",id:"mybatis-xml",level:4},{value:"0x00 Bean",id:"0x00-bean",level:3},{value:"0x06 With Kotlin",id:"0x06-with-kotlin",level:3},{value:"0x0X",id:"0x0x",level:3},{value:"<del>0x03 Reactive</del>",id:"0x03-reactive",level:3}],d={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"0x01-restful"},"0x01 RESTful"),(0,i.kt)("h4",{id:"userjava"},(0,i.kt)("inlineCode",{parentName:"h4"},"User.java")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"lombok")," ",(0,i.kt)("inlineCode",{parentName:"p"},"@Data"),"\ngetter setter\n\u76f8\u6bd4 1.x \u7248\u672c\u6559\u7a0b\u4e2d\u81ea\u5b9a\u4e49 set \u548c get \u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u8fd9\u91cc\u4f7f\u7528@Data \u6ce8\u89e3\u53ef\u4ee5\u5b9e\u73b0\u5728\u7f16\u8bd1\u5668\u81ea\u52a8\u6dfb\u52a0 set \u548c get \u51fd\u6570\u7684\u6548\u679c\u3002\u8be5\u6ce8\u89e3\u662f lombok \u63d0\u4f9b\u7684")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"javax.validation.constraints"),"\nvalid"))),(0,i.kt)("h4",{id:"usercontrollerjava"},(0,i.kt)("inlineCode",{parentName:"h4"},"UserController.java")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    // \u521b\u5efa\u7ebf\u7a0b\u5b89\u5168\u7684Map\uff0c\u6a21\u62dfusers\u4fe1\u606f\u7684\u5b58\u50a8\n    static Map<Long, User> users = Collections.synchronizedMap(new HashMap<Long, User>());\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@RestController"),"\nres body as json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@PostMapping(path = "/add")\npublic @ResponseBody String addNewGhost(@RequestBody City city) {\n    cityService.insert(city);\n    return "Saved";\n}\n\n// =>\n\n@PostMapping(path = "/add")\npublic String addNewGhost(@RequestBody City city) {\n    cityService.insert(city);\n    return "Saved";\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@RequestMapping"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@GetMapping")," ",(0,i.kt)("inlineCode",{parentName:"p"},"@PostMapping")," ",(0,i.kt)("inlineCode",{parentName:"p"},"@PutMapping")," ",(0,i.kt)("inlineCode",{parentName:"p"},"@DeleteMapping"),"\nreq method")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@PathVariable")," Long id\nuri param")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@RequestParam"),"\nreq param")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@RequestBody")," User user\nreq body"))),(0,i.kt)("h3",{id:"0x02-spring-data-repository"},"0x02 Spring Data repository"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/gs/accessing-data-mysql/#initial"},"Accessing data with MySQL")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Hibernate")),(0,i.kt)("h4",{id:"ghostjava"},(0,i.kt)("inlineCode",{parentName:"h4"},"Ghost.java")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"javax.persistence")," @Entity\n\u5b9e\u4f53\u7c7b This tells Hibernate to make a table out of this class")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"@Id"),"\nprimire key"))),(0,i.kt)("h4",{id:"ghostrepositoryjava"},(0,i.kt)("inlineCode",{parentName:"h4"},"GhostRepository.java")),(0,i.kt)("h4",{id:"ghostcontrollerjava"},(0,i.kt)("inlineCode",{parentName:"h4"},"GhostController.java")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    @Autowired // This means to get the bean called userRepository\n                // Which is auto-generated by Spring, we will use it to handle the data\n    private GhostRepository ghostRepository;\n\n    ghostRepository.save(n);\n\n    ghostRepository.findAll();\n")),(0,i.kt)("h3",{id:"0x00-spring-data-jpa"},"0x00 Spring Data JPA"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"build.gradle")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n}\n")),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://spring.io/projects/spring-data-jpa"},"Spring Data JPA"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/gs/accessing-data-jpa/"},"Accessing Data with JPA"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!0,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/gs/accessing-data-rest/"},"Accessing JPA Data with REST")))),(0,i.kt)("p",null,"A few examples to try out:"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spring-projects/spring-data-examples/tree/master/jpa"},"Spring Data JPA Examples"))),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/spring-projects/spring-data-book/tree/master/jpa"},"Spring Data Book Examples")))),(0,i.kt)("h4",{id:"repository"},"Repository"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Entity")," <==> ",(0,i.kt)("inlineCode",{parentName:"p"},"Repository")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.List;\n\nimport org.springframework.data.repository.PagingAndSortingRepository;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.data.rest.core.annotation.RepositoryRestResource;\n\n@RepositoryRestResource(collectionResourceRel = "people", path = "people")\npublic interface PersonRepository extends PagingAndSortingRepository<Person, Long> {\n\n    List<Person> findByLastName(@Param("name") String name);\n\n}\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("del",{parentName:"p"},"JpaRepository"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"PagingAndSortingRepository")),(0,i.kt)("p",null,"Extension of CrudRepository to provide additional methods to retrieve entities using the pagination and sorting abstraction."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"interface JpaRepository<T, ID> extends PagingAndSortingRepository<T, ID>, QueryByExampleExecutor<T>\n\ninterface PagingAndSortingRepository<T, ID> extends CrudRepository<T, ID>\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"CrudRepository")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/cbf0a7c5c985"},"https://www.jianshu.com/p/cbf0a7c5c985")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"@RepositoryRestResource")),(0,i.kt)("h3",{id:"0x00-database"},"0x00 Database"),(0,i.kt)("p",null,"redis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},'    implementation "org.springframework.boot:spring-boot-starter-data-redis"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"redis:\n  database: 0\n  host: localhost\n  port: 6379\n  password:\n  pool:\n    # \u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09\n    max-active: 8\n    # \u8fde\u63a5\u6c60\u6700\u5927\u963b\u585e\u7b49\u5f85\u65f6\u95f4\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09\n    max-wait: -1\n    # \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u8fde\u63a5\n    max-idle: 8\n    # \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\n    min-idle: 0\n  # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u6beb\u79d2\uff09\n  timeout: 0\n")),(0,i.kt)("h3",{id:"0x04-mybatis"},"0x04 Mybatis"),(0,i.kt)("h4",{id:"mybatis-comment"},"Mybatis Comment"),(0,i.kt)("h4",{id:"mybatis-xml"},"Mybatis XML"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pagehelper/Mybatis-PageHelper"},"MyBatis Pagination")),(0,i.kt)("h3",{id:"0x00-bean"},"0x00 Bean"),(0,i.kt)("h3",{id:"0x06-with-kotlin"},"0x06 With Kotlin"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/0d67771ae14c"},"https://www.jianshu.com/p/0d67771ae14c")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/tutorials/spring-boot-kotlin/"},"https://spring.io/guides/tutorials/spring-boot-kotlin/")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"\u534f\u7a0b")),(0,i.kt)("h3",{id:""}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kinbiko.com/java/dependency-injection-patterns/"},"Spring Dependency Injection Patterns")),(0,i.kt)("h3",{id:"0x0x"},"0x0X"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"org.springframework.beans.factory.annotation.Autowired")," ",(0,i.kt)("inlineCode",{parentName:"p"},"@Autowired")),(0,i.kt)("h3",{id:"0x03-reactive"},(0,i.kt)("del",{parentName:"h3"},"0x03 Reactive")),(0,i.kt)("blockquote",null,(0,i.kt)("h4",{parentName:"blockquote",id:"spring-webflux"},"Spring WebFlux")),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!1,disabled:!0})," ","Spring Web MVC -> Spring Data")),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("input",{parentName:"p",type:"checkbox",checked:!0,disabled:!0})," ","Spring WebFlux -> Spring Data Reactive"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://spring.io/guides/gs/reactive-rest-service/"},"Building a Reactive RESTful Web Service")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/30813274"},"\u804a\u804a Spring Boot 2.0 \u7684 WebFlux")),(0,i.kt)("blockquote",null,(0,i.kt)("h4",{parentName:"blockquote",id:"rxjava"},"RxJava")),(0,i.kt)("blockquote",null,(0,i.kt)("h4",{parentName:"blockquote",id:"vertx"},"Vert.x")),(0,i.kt)("blockquote",null,(0,i.kt)("h4",{parentName:"blockquote",id:"async"},"Async")),(0,i.kt)("hr",null),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.tengshe789.tech/2018/08/04/springboot/"},"\u8fd9\u662f\u4e00\u7bc7\u4f18\u96c5\u7684 Springboot2.0 \u4f7f\u7528\u624b\u518c"))))}m.isMDXComponent=!0}}]);