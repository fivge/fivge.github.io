"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4534],{3905:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},o=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,p=e.originalType,l=e.parentName,o=a(e,["components","mdxType","originalType","parentName"]),c=u(r),d=i,_=c["".concat(l,".").concat(d)]||c[d]||m[d]||p;return r?n.createElement(_,s(s({ref:t},o),{},{components:r})):n.createElement(_,s({ref:t},o))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var p=r.length,s=new Array(p);s[0]=c;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var u=2;u<p;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2899:function(e,t,r){r.r(t),r.d(t,{assets:function(){return o},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return m}});var n=r(3117),i=r(102),p=(r(7294),r(3905)),s=["components"],a={title:"mycli",date:new Date("2018-08-22T17:42:17.000Z")},l=void 0,u={unversionedId:"CloudNative/term/mycli",id:"CloudNative/term/mycli",title:"mycli",description:"https://www.mycli.net/",source:"@site/docs/CloudNative/term/mycli.md",sourceDirName:"CloudNative/term",slug:"/CloudNative/term/mycli",permalink:"/docs/CloudNative/term/mycli",draft:!1,tags:[],version:"current",lastUpdatedAt:1690668988,formattedLastUpdatedAt:"Jul 29, 2023",frontMatter:{title:"mycli",date:"2018-08-22T17:42:17.000Z"},sidebar:"tutorialSidebar",previous:{title:"C++ with Libcurl",permalink:"/docs/CloudNative/term/libcurl"},next:{title:"nc",permalink:"/docs/CloudNative/term/nc"}},o={},m=[{value:"\u67e5\u8be2\u4f9b\u5e94\u5546\u7701\u4efd\u4fe1\u606f",id:"\u67e5\u8be2\u4f9b\u5e94\u5546\u7701\u4efd\u4fe1\u606f",level:3},{value:"\u6dfb\u52a0\u4f9b\u5e94\u5546",id:"\u6dfb\u52a0\u4f9b\u5e94\u5546",level:3}],c={toc:m};function d(e){var t=e.components,r=(0,i.Z)(e,s);return(0,p.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"https://www.mycli.net/"},"https://www.mycli.net/")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-vbscript"},'MasterDb.global.properties= "ip=172.22.38.141,  port=3306,dbName=dev, dbType=mysql ,dbStatus=RW"\nMasterDb.app.properties= "userName=market ,checkValidConnectionSQL=select 1,minPoolSize=5 , maxPoolSize=10 , idleTimeout=1000 , blockingTimeout=100000,preparedStatementCacheSize=15 ,connectionProperties=connectTimeout=1000&autoReconnect=true&socketTimeout=12000&characterEncoding=utf-8&rewriteBatchedStatements=true"\nMasterDb.passwd.properties= "encPasswd=market"\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"$ mycli -h localhost -u root app_db\n$ mycli mysql://amjith@localhost:3306/django_poll\n\n\nmycli mysql://market@172.22.38.141:3306/dev\n\nmycli -h 172.22.38.141 -u market dev\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-mysql"},'SELECT COUNT(g)  FROM  WHERE `status`="\u4e0a\u67b6" AND ztlx IS NOT NULL GROUP BY ztlx;\n\ngoods_supplier\n\nprovince\n\nsupplier_id\n\nSELECT COUNT(supplier_id) FROM goods_supplier;\n\n\n//\u67e5\u8be2 \u4f20 json\nSELECT province,COUNT(supplier_id) num FROM goods_supplier GROUP BY province;\n')),(0,p.kt)("h3",{id:"\u67e5\u8be2\u4f9b\u5e94\u5546\u7701\u4efd\u4fe1\u606f"},"\u67e5\u8be2\u4f9b\u5e94\u5546\u7701\u4efd\u4fe1\u606f"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"\n"http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n\n<mapper namespace="com.inspur.manage.Mapper.IndexsMapper">\n    <select id="selectuser" resultType="map">\n    select count(nickname) as total,FROM_UNIXTIME(create_time,\'%Y-%m-%d\') as create_time\n        from user group BY FROM_UNIXTIME(create_time,\'%Y-%m-%d\');\n</select>\n    <select id="selectAmaker" resultType="map">\n    select count(name) as total,FROM_UNIXTIME(add_time,\'%Y-%m-%d\') as add_time\n        from amaker group BY FROM_UNIXTIME(add_time,\'%Y-%m-%d\');\n</select>\n    <select id="selectBmaker" resultType="map">\n        select count(name) as total,FROM_UNIXTIME(add_time,\'%Y-%m-%d\') as add_time\n        from bmaker group BY FROM_UNIXTIME(add_time,\'%Y-%m-%d\');\n</select>\n    <select id="OpendataSum" resultType="String" parameterType="map">\n    SELECT sum(total_price) as sales FROM order_build WHERE pay_status = \'paid\' AND pay_time BETWEEN #{sdate} AND #{edate};\n</select>\n    <select id="DatasqSum" resultType="String" parameterType="map">\n    SELECT count(*) FROM order_build WHERE create_time BETWEEN #{sdate} AND #{edate};\n</select>\n    <select id="DemandSum" resultType="String" parameterType="map">\n    SELECT count(*) FROM goods_supplier WHERE create_time BETWEEN #{sdate} AND #{edate};\n</select>\n    <select id="OrderSum" resultType="String" parameterType="map">\n    SELECT count(*) FROM goods_info WHERE is_shelved = \'\u5df2\u4e0a\u67b6\' AND shelved_time BETWEEN #{sdate} AND #{edate};\n</select>\n    <select id="selectcategory" resultType="map">\n    SELECT COUNT(goods_id) num,ztlx FROM opendata WHERE `status`="\u4e0a\u67b6" AND ztlx IS NOT NULL GROUP BY ztlx;\n</select>\n    <select id="selectcitytop" resultType="map">\n    SELECT COUNT(*) num,t1.area,t2.dq_mc FROM opendata t1 INNER JOIN code_table_area t2 ON t1.area=t2.dq_dm GROUP BY t1.area ORDER BY num DESC LIMIT 5;\n</select>\n    <select id="selectareahot" resultType="map">\n    select COUNT(*) num,t1.area,t2.dq_mc,substring(t1.area,1,2) ea FROM opendata t1 INNER JOIN code_table_area t2 ON substring(t1.area,1,2)=t2.dq_dm GROUP BY substring(t1.area,1,2);\n</select>\n</mapper>\n\n')),(0,p.kt)("h3",{id:"\u6dfb\u52a0\u4f9b\u5e94\u5546"},"\u6dfb\u52a0\u4f9b\u5e94\u5546"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-xml"},'     <insert id="addSuppliers" parameterType="map" >\n       insert into goods_supplier(supplier_name,province,short_name,supplier_img,description,supplier_url,state,supplier_index,key_name,supplier_tab,supplier_key,customerservice,workinghours,email,link_flag,link_key,key_ctime)\n       values (\n        #{supplierName},#{supplierProvince},#{shortName},#{imgUrl},#{content},#{supplierUrl},\'1\',#{score},#{key_name},\n        #{supplier_tab},#{supplier_key},#{customerservice},#{workinghours},#{email},#{link_flag},\n        #{link_key},#{key_ctime})\n\n    </insert>\n')),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"all.xml")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"\n"http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n\n<mapper namespace="com.inspur.manage.Mapper.SuppliersMapper">\n    <select id="findSuppliers" parameterType="map" resultType="map">\n        SELECT\n            supplier_id AS id,\n            supplier_id AS supplier_id,\n            supplier_name AS suppliername,\n            short_name AS shortname,\n            supplier_index AS score,\n            customerservice,\n            workinghours,\n            email,\n            IFNULL(liaison_name,\'\') AS liaison_name,\n            IFNULL(liaison_phone,\'\') AS liaison_phone,\n            IFNULL(liaison_email,\'\') AS liaison_email,\n            CASE\n                WHEN state =\'0\' THEN \'\u9690\u85cf\'\n                WHEN state = \'1\' THEN \'\u663e\u793a\'\n            END status\n        FROM goods_supplier\n        WHERE 1=1\n        <if test="supplierName != null and supplierName !=\'\'">\n            AND supplier_name LIKE \'%${supplierName}%\'\n        </if>\n\n        <if test="status != null and status !=\'\' ">\n            AND state = #{status}\n        </if>\n            ORDER BY supplier_id ASC\n    </select>\n    <select id="loadSuppliers" resultType="map">\n\n\n\n    </select>\n\n    <insert id="addSuppliers" parameterType="map" >\n       insert into goods_supplier(supplier_name,province,short_name,supplier_img,description,supplier_url,state,supplier_index,key_name,supplier_tab,supplier_key,customerservice,workinghours,email,link_flag,link_key,key_ctime)\n       values (\n        #{supplierName},#{supplierProvince},#{shortName},#{imgUrl},#{content},#{supplierUrl},\'1\',#{score},#{key_name},\n        #{supplier_tab},#{supplier_key},#{customerservice},#{workinghours},#{email},#{link_flag},\n        #{link_key},#{key_ctime})\n    </insert>\n\n    <select id="searchInfo"  resultType="map">\n        select * from goods_supplier where supplier_id = #{id}\n    </select>\n\n\n    <update id="updateSuppliers" parameterType="map" >\n        update goods_supplier set supplier_name = #{supplierName},short_name = #{shortName},customerservice = #{customerservice},workinghours = #{workinghours},email = #{email},\n        supplier_img = #{imgUrl},key_name = #{key_name},supplier_key=#{supplier_key},supplier_tab=#{supplier_tab},\n        description = #{content},supplier_url = #{supplierUrl},supplier_index = #{score},link_flag=#{link_flag},link_key=#{link_key},key_ctime=#{key_ctime}\n        where supplier_id = #{id}\n\n    </update>\n    <update id="updateStatus" parameterType="map" >\n        update goods_supplier set state = #{status}\n        where supplier_id = #{id}\n\n    </update>\n\n    <select id="searchImgPath"  resultType="String">\n        select supplier_img from goods_supplier where supplier_id = #{id}\n    </select>\n    <select id="searchContent"  resultType="String">\n        select description from goods_supplier where supplier_id = #{id}\n    </select>\n    <delete id = "deleteData">\n        delete from goods_supplier where supplier_id = #{id}\n    </delete>\n\n    <select id="getMaxId"  resultType="int">\n        select max(supplier_id) from goods_supplier\n\n    </select>\n</mapper>\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">\n\n<mapper namespace="com.inspur.manage.Mapper.SuppliersMapper">\n  <select id="findSuppliers" parameterType="map" resultType="map">SELECT supplier_id AS id, supplier_id AS supplier_id, supplier_name AS suppliername, short_name AS shortname, supplier_index AS score, customerservice, workinghours, email, IFNULL(liaison_name,\'\') AS liaison_name, IFNULL(liaison_phone,\'\') AS liaison_phone, IFNULL(liaison_email,\'\') AS liaison_email, CASE WHEN state =\'0\' THEN \'\u9690\u85cf\' WHEN state = \'1\' THEN \'\u663e\u793a\' END status FROM goods_supplier WHERE 1=1\n    <if test="supplierName != null and supplierName !=\'\'">AND supplier_name LIKE \'%${supplierName}%\'</if>\n    <if test="status != null and status !=\'\' ">AND state = #{status}</if> ORDER BY supplier_id ASC\n  </select>\n  <select id="loadSuppliers" resultType="map"></select>\n  <insert id="addSuppliers" parameterType="map">insert into goods_supplier(supplier_name,province,short_name,supplier_img,description,supplier_url,state,supplier_index,key_name,supplier_tab,supplier_key,customerservice,workinghours,email,link_flag,link_key,key_ctime) values ( #{supplierName},#{supplierProvince},#{shortName},#{imgUrl},#{content},#{supplierUrl},\'1\',#{score},#{key_name}, #{supplier_tab},#{supplier_key},#{customerservice},#{workinghours},#{email},#{link_flag}, #{link_key},#{key_ctime})</insert>\n  <select id="searchInfo" resultType="map">select * from goods_supplier where supplier_id = #{id}</select>\n  <update id="updateSuppliers" parameterType="map">update goods_supplier set supplier_name = #{supplierName},short_name = #{shortName},customerservice = #{customerservice},workinghours = #{workinghours},email = #{email}, supplier_img = #{imgUrl},key_name = #{key_name},supplier_key=#{supplier_key},supplier_tab=#{supplier_tab}, description = #{content},supplier_url = #{supplierUrl},supplier_index = #{score},link_flag=#{link_flag},link_key=#{link_key},key_ctime=#{key_ctime} where supplier_id = #{id}</update>\n  <update id="updateStatus" parameterType="map">update goods_supplier set state = #{status} where supplier_id = #{id}</update>\n  <select id="searchImgPath" resultType="String">select supplier_img from goods_supplier where supplier_id = #{id}</select>\n  <select id="searchContent" resultType="String">select description from goods_supplier where supplier_id = #{id}</select>\n  <delete id="deleteData">delete from goods_supplier where supplier_id = #{id}</delete>\n  <select id="getMaxId" resultType="int">select max(supplier_id) from goods_supplier</select>\n</mapper>\n\n')))}d.isMDXComponent=!0}}]);