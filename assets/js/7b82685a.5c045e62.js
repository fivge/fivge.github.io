"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3649],{2533:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(3117),o=t(102),i=(t(7294),t(3905)),a=["components"],s={},l=void 0,c={unversionedId:"FE/angular/excel/ivy",id:"FE/angular/excel/ivy",title:"ivy",description:"ngcc",source:"@site/docs/FE/angular/excel/ivy.md",sourceDirName:"FE/angular/excel",slug:"/FE/angular/excel/ivy",permalink:"/docs/FE/angular/excel/ivy",draft:!1,tags:[],version:"current",lastUpdatedAt:1595780029,formattedLastUpdatedAt:"Jul 26, 2020",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dynamic-components",permalink:"/docs/FE/angular/excel/dynamic-components"},next:{title:"pipe",permalink:"/docs/FE/angular/excel/pipe"}},p={},u=[{value:"ngcc",id:"ngcc",level:4},{value:"\u5143\u7f16\u7a0b",id:"\u5143\u7f16\u7a0b",level:4}],d={toc:u};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"ngcc"},"ngcc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ yarn ngcc --help\n\nOptions:\n  --version                          \u663e\u793a\u7248\u672c\u53f7                           [\u5e03\u5c14]\n  -s, --source                       A path (relative to the working directory)\n                                     of the `node_modules` folder to process.\n                                                      [\u9ed8\u8ba4\u503c: "./node_modules"]\n  -p, --properties                   An array of names of properties in\n                                     package.json to compile (e.g. `module` or\n                                     `es2015`)\n                                     Each of these properties should hold the\n                                     path to a bundle-format.\n                                     If provided, only the specified properties\n                                     are considered for processing.\n                                     If not provided, all the supported format\n                                     properties (e.g. fesm2015, fesm5, es2015,\n                                     esm2015, esm5, main, module) in the\n                                     package.json are considered.         [\u6570\u7ec4]\n  -t, --target                       A relative path (from the `source` path) to\n                                     a single entry-point to process (plus its\n                                     dependencies).\n                                     If this property is provided then\n                                     `error-on-failed-entry-point` is forced to\n                                     true\n  --first-only                       If specified then only the first matching\n                                     package.json property will be compiled.\n                                                                          [\u5e03\u5c14]\n  --create-ivy-entry-points          If specified then new `*_ivy_ngcc`\n                                     entry-points will be added to package.json\n                                     rather than modifying the ones in-place.\n                                     For this to work you need to have custom\n                                     resolution set up (e.g. in webpack) to look\n                                     for these new entry-points.\n                                     The Angular CLI does this already, so it is\n                                     safe to use this option if the project is\n                                     being built via the CLI.             [\u5e03\u5c14]\n  --legacy-message-ids               Render `$localize` messages with legacy\n                                     format ids.\n                                     The default value is `true`. Only set this\n                                     to `false` if you do not want legacy\n                                     message ids to\n                                     be rendered. For example, if you are not\n                                     using legacy message ids in your\n                                     translation files\n                                     AND are not doing compile-time inlining of\n                                     translations, in which case the extra\n                                     message ids\n                                     would add unwanted size to the final source\n                                     bundle.\n                                     It is safe to leave this set to true if you\n                                     are doing compile-time inlining because the\n                                     extra\n                                     legacy message ids will all be stripped\n                                     during translation.   [\u5e03\u5c14] [\u9ed8\u8ba4\u503c: true]\n  --async                            Whether to compile asynchronously. This is\n                                     enabled by default as it allows\n                                     compilations to be parallelized.\n                                     Disabling asynchronous compilation may be\n                                     useful for debugging. [\u5e03\u5c14] [\u9ed8\u8ba4\u503c: true]\n  -l, --loglevel                     The lowest severity logging message that\n                                     should be output.\n                                      [\u53ef\u9009\u503c: "debug", "info", "warn", "error"]\n  --invalidate-entry-point-manifest  If this is set then ngcc will not read an\n                                     entry-point manifest file from disk.\n                                     Instead it will walk the directory tree as\n                                     normal looking for entry-points, and then\n                                     write a new manifest file.\n                                                          [\u5e03\u5c14] [\u9ed8\u8ba4\u503c: false]\n  --error-on-failed-entry-point      Set this option in order to terminate\n                                     immediately with an error code if an\n                                     entry-point fails to be processed.\n                                     If `-t`/`--target` is provided then this\n                                     property is always true and cannot be\n                                     changed. Otherwise the default is false.\n                                     When set to false, ngcc will continue to\n                                     process entry-points after a failure. In\n                                     which case it will log an error and resume\n                                     processing other entry-points.\n                                                          [\u5e03\u5c14] [\u9ed8\u8ba4\u503c: false]\n  --tsconfig                         A path to a tsconfig.json file that will be\n                                     used to configure the Angular compiler and\n                                     module resolution used by ngcc.\n                                     If not provided, ngcc will attempt to read\n                                     a `tsconfig.json` file from the folder\n                                     above that given by the `-s` option.\n                                     Set to false (via `--no-tsconfig`) if you\n                                     do not want ngcc to use any `tsconfig.json`\n                                     file.                              [\u5b57\u7b26\u4e32]\n  --help                             \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                         [\u5e03\u5c14]\nDone in 7.44s.\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ngcc --properties es2015 browser module main --first-only\n")),(0,i.kt)("h4",{id:"\u5143\u7f16\u7a0b"},"\u5143\u7f16\u7a0b"))}f.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),f=o,g=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);